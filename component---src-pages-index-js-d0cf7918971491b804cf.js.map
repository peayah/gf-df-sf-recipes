{"version":3,"file":"component---src-pages-index-js-d0cf7918971491b804cf.js","mappings":"yLAmBA,EAnBkB,SAAAA,GACd,IAAMC,EAAU,GAehB,OAdAD,EAAQE,SAAQ,SAAAC,GACZA,EAAOC,QAAQC,KAAKH,SAAQ,SAAAI,GACrBL,EAAQK,GACPL,EAAQK,GAAOL,EAAQK,GAAO,EAE9BL,EAAQK,GAAM,QAIVC,OAAOC,QAAQP,GAASQ,MAAK,SAACC,EAAEC,GAC5C,IAAOC,EAAYF,EAAnB,GACOG,EAAaF,EAApB,GACA,OAAOC,EAASE,cAAcD,O,6BCetC,EAxBiB,SAAC,GAAe,IAAdb,EAAa,EAAbA,QAEXe,EAAUC,EAAUhB,GAE1B,OADAiB,QAAQC,IAAIH,GAEZ,uBAAKI,UAAU,iBAEb,qCACA,uBAAKA,UAAU,aACdJ,EAAQK,KAAI,SAACd,EAAKe,GACjB,IAAOC,EAAehB,EAAtB,GAAaiB,EAASjB,EAAtB,GACMkB,EAAOC,IAAQH,EAAM,CAACI,OAAO,IACnC,OACE,gBAAC,KAAD,CAAMC,GAAE,SAAWH,EAAQI,IAAKP,GAC7BC,EADH,KACYC,EADZ,W,SCoBR,EAZmB,WACjB,IACMvB,GADO6B,EAAAA,EAAAA,IAtBJ,cAuBYC,sBAAsBC,MAE3C,OACE,2BAASZ,UAAU,qBACjB,gBAAC,EAAD,CAAUnB,QAAUA,IACpB,gBAACgC,EAAA,EAAD,CAAahC,QAASA,O,yECL5B,IAvBoB,SAAC,GAAoB,IAAD,IAAlBA,QAAAA,OAAkB,MAAR,GAAQ,EACtC,OACA,uBAAKmB,UAAU,gBACXnB,EAAQoB,KAAI,SAAAjB,GACV,IAAO8B,EAAwC9B,EAAxC8B,GAAIC,EAAoC/B,EAApC+B,MAAOC,EAA6BhC,EAA7BgC,MAAOC,EAAsBjC,EAAtBiC,SAAUC,EAAYlC,EAAZkC,SAC7BC,GAAcC,EAAAA,EAAAA,GAASJ,GACvBX,EAAOC,IAAQS,EAAO,CAACR,OAAO,IACpC,OAAO,gBAAC,KAAD,CAAME,IAAOK,EAAIN,GAAE,IAAMH,EAAQL,UAAU,UAC9C,gBAAC,EAAAqB,EAAD,CACAL,MAAOG,EACPnB,UAAU,aACVsB,IAAKP,IAEL,0BAAKA,GACL,kCACSE,EADT,eAC+BC,EAD/B,c,4GCbG,SAASK,IACtB,OACE,gBAAC,IAAD,KACE,wBAAMvB,UAAU,QACd,0BAAQA,UAAU,QAChB,gBAAC,EAAAwB,EAAD,CACAC,IAAI,6CACJC,YAAY,UACZJ,IAAI,mBACJtB,UAAU,WACV2B,OAAO,YALP,sBAOA,uBAAK3B,UAAU,kBACb,uBAAKA,UAAU,aACb,6CACA,iDAIN,gBAAC,IAAD,U","sources":["webpack://gatsby-starter-hello-world/./src/utils/setupTags.js","webpack://gatsby-starter-hello-world/./src/components/TagsList.js","webpack://gatsby-starter-hello-world/./src/components/AllRecipes.js","webpack://gatsby-starter-hello-world/./src/components/RecipesList.js","webpack://gatsby-starter-hello-world/./src/pages/index.js"],"sourcesContent":["const setupTags = recipes => {\n    const allTags = {};\n    recipes.forEach(recipe => {\n        recipe.content.tags.forEach(tag => {\n            if(allTags[tag]) {\n                allTags[tag] = allTags[tag] + 1\n            } else {\n                allTags[tag]= 1\n            }\n        })\n    })  \n    const newTags = Object.entries(allTags).sort((a,b) => {\n        const [firstTag] = a;\n        const [secondTag] = b;\n        return firstTag.localeCompare(secondTag)\n    })   \n    return newTags\n}\n\nexport default setupTags","import React from 'react';\nimport setupTags from '../utils/setupTags';\nimport { Link } from \"gatsby\"\nimport slugify from \"slugify\"\n\nconst TagsList = ({recipes}) => {\n\n  const newTags = setupTags(recipes)\n  console.log(newTags)\n  return (\n  <div className='tag-container'>\n    \n    <h4>recipes</h4>\n    <div className=\"tags-list\">\n    {newTags.map((tag, index) => {\n      const [text, value] = tag\n      const slug = slugify(text, {lower: true})\n      return (\n        <Link to={`/tags/${slug}`} key={index}>\n          {text } ({value})\n        </Link>\n      )\n    })}\n\n    </div>\n    </div>\n  )\n}\n\nexport default TagsList","import React from 'react';\nimport TagsList from \"./TagsList\";\nimport RecipesList from './RecipesList';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nconst query = graphql`\n  {\n    allContentfulRecipies {\n      nodes {\n        title\n        id\n        cooktime\n        featured\n        servings\n        preptime\n        image {\n          gatsbyImageData(placeholder: TRACED_SVG, layout: CONSTRAINED)\n        }\n        content {\n        tags\n      }\n      }\n    }\n  }\n`\n\nconst AllRecipes = () => {\n  const data = useStaticQuery(query);\n  const recipes = data.allContentfulRecipies.nodes;\n  \n  return (\n    <section className=\"recipes-container\">\n      <TagsList recipes= {recipes}/>\n      <RecipesList recipes={recipes}/>\n    </section>\n  )\n}\n\nexport default AllRecipes","import React from 'react';\nimport { Link } from \"gatsby\";\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\nimport slugify from \"slugify\";\n\nconst RecipesList = ({recipes = []}) => {\n  return ( \n  <div className='recipes-list'>{\n      recipes.map(recipe => {\n        const {id, title, image, preptime, cooktime} = recipe;\n        const pathToImage = getImage(image);\n        const slug = slugify(title, {lower: true});\n        return <Link key = {id} to={`/${slug}`} className=\"recipe\">\n            <GatsbyImage\n            image={pathToImage}\n            className=\"recipe-img\"\n            alt={title}\n            />\n            <h5>{title}</h5>\n            <p>\n              Prep: {preptime}min | Cook: {cooktime}min\n            </p>\n          </Link>\n      })\n  }</div>\n  )\n}\n\nexport default RecipesList","import React from \"react\"\nimport Layout from \"../components/Layout\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport AllRecipes from \"../components/AllRecipes\"\n\n\nexport default function Home() {\n  return (\n    <Layout>\n      <main className='page'>\n        <header className=\"hero\">\n          <StaticImage \n          src=\"../assets/images/main-kristina-snowasp.jpg\"\n          placeholder=\"blurred\"\n          alt=\"food ingredients\"\n          className=\"hero-img\"\n          layout=\"fullWidth\"\n          />\n          <div className=\"hero-container\">\n            <div className=\"hero-text\">\n              <h1>This is so easy</h1>\n              <h4>... and so good!</h4>\n            </div>\n          </div>\n        </header>\n        <AllRecipes/>\n      </main>\n    </Layout>\n  )\n}\n"],"names":["recipes","allTags","forEach","recipe","content","tags","tag","Object","entries","sort","a","b","firstTag","secondTag","localeCompare","newTags","setupTags","console","log","className","map","index","text","value","slug","slugify","lower","to","key","useStaticQuery","allContentfulRecipies","nodes","RecipesList","id","title","image","preptime","cooktime","pathToImage","getImage","G","alt","Home","S","src","placeholder","layout"],"sourceRoot":""}